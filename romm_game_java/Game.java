/** *  This class is the main class of the "Haunted House" application.  *  "Haunted House" is a very simple, text based adventure game.   *  Users can walk around, pick or drop something, do some function in some room *  and complete the game by a mission. *  To play this game, create an instance of this class with entering 1 to play game with GUI  *  This main class creates and initialises "rooms" of the game and the start of the game.   * @author   Lingkai Huang (21318909) * @version  8/1/2014 */public class Game{    private UserInterface gui;    private GameEngine engine;    /**     * !!!!!     * enter number 1 to play game with GUI     * enter other numbers to play with only text     * !!!!!     */    public Game(int index)     {        createRooms();        gui = new UserInterface(engine, index);        engine.setGUI(gui);        gui.ableButton(false);    }        /**       * Create all the rooms, items and exits. Link them together.     */    private void createRooms()    {        Room balcony, studio, study, office, bedroom,         bathroom, toilet, livingroom, kitchen, hall;        // create the rooms        balcony = new Room("in the balcony");        studio = new Room("in the studio");        study = new Room("in the study");        office = new Room("in the office");        bedroom = new Room("in the bedroom");        bathroom = new Room("in the bathroom");        toilet = new Room("in the toilet");        livingroom = new Room("in the livingroom");        kitchen = new Room("in the kitchen");        hall = new Room("in the hall");        // create items of rooms        balcony.creatItem("flower", balcony, 5);        balcony.creatItem("ball", balcony, 15);        studio.creatItem("monster", studio, 200);        study.creatItem("weapon", study, 15);        office.creatItem("key", office, 10);        bedroom.creatItem("book", bedroom, 20);        bathroom.creatItem("hat", bathroom, 5);        livingroom.creatItem("food", livingroom, 10);        // initialise room exits        balcony.setExit("north", bedroom);        bedroom.setExit("north", studio);        bedroom.setExit("south", balcony);        bedroom.setExit("east", study);        bedroom.setExit("west", office);        study.setExit("west", bedroom);        office.setExit("north", bathroom);        office.setExit("east", bedroom);        bathroom.setExit("south", office);        bathroom.setExit("east", studio);        studio.setExit("west", bathroom);        studio.setExit("south", bedroom);        studio.setExit("down", livingroom);        livingroom.setExit("up", studio);        livingroom.setExit("west", toilet);        livingroom.setExit("east", kitchen);        livingroom.setExit("south", hall);        toilet.setExit("east", livingroom);        kitchen.setExit("west", livingroom);        hall.setExit("north", livingroom);                engine = new GameEngine(balcony);  // start game outside    }}